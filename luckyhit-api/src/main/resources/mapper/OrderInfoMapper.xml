<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luckyhit.mapper.OrderInfoMapper" >
    <sql id="BaseColumnList" >
        id, firstuserid, seconduserid, restaurantid, diningbegintime, diningendtime, status, lastupdatetime
    </sql>
    <select id="selectByPrimaryKey" resultType="com.luckyhit.entity.OrderInfoEntity" parameterType="java.lang.Integer" >
        select
        <include refid="BaseColumnList" />
        from order_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByFirstUserId" resultType="com.luckyhit.entity.OrderInfoEntity" parameterType="java.lang.String" >
        select
        <include refid="BaseColumnList" />
        from order_info
        where firstuserid = #{firstUserId,jdbcType=INTEGER}
    </select>
    <select id="selectList" resultType="com.luckyhit.entity.OrderInfoEntity">
        select
        <include refid="BaseColumnList" />
        from order_info
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from order_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.luckyhit.entity.OrderInfoEntity">
        <selectKey keyProperty="id" resultType="java.lang.Integer" order="AFTER">
            SELECT currval('order_info_id_seq')
        </selectKey>
        insert into order_info(firstuserid, seconduserid, restaurantid, diningbegintime, diningendtime, status, lastupdatetime)
        values (#{firstUserId,jdbcType=VARCHAR}, #{secondUserId,jdbcType=VARCHAR},
        #{restaurantId,jdbcType=INTEGER}, #{diningBeginTime,jdbcType=TIMESTAMP},
        #{diningEndTime,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}, #{lastUpdateTime,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.luckyhit.entity.OrderInfoEntity" >
        update order_info set
        firstuserid = #{firstUserId,jdbcType=VARCHAR},
        seconduserid = #{secondUserId,jdbcType=VARCHAR},
        restaurantid = #{restaurantId,jdbcType=INTEGER},
        diningbegintime = #{diningBeginTime,jdbcType=TIMESTAMP},
        diningendtime = #{diningEndTime,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=SMALLINT},
        lastupdatetime = #{lastUpdateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>